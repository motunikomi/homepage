plugins {
	id 'org.springframework.boot' version '2.2.6.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
//	id 'checkstyle'
	id 'war'
	id 'pmd'
//	id 'jacoco'
	id "org.sonarqube" version "2.8"
}

group = 'com.home'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}
/*
checkstyle {
	toolVersion '8.31'
	configFile = file('./src/google_checks.xml')
	ignoreFailures = true
}
*/
pmd {
    toolVersion '6.10.0'
    ignoreFailures = true
    ruleSets = [
            "category/java/bestpractices.xml",
            "category/java/codestyle.xml",
            "category/java/design.xml",
            "category/java/documentation.xml",
            "category/java/errorprone.xml",
            "category/java/multithreading.xml",
            "category/java/performance.xml",
            "category/java/security.xml"
    ]
}

test {
	useJUnitPlatform()
	maxParallelForks = 4
}

sonarqube {
  properties {
    property "sonar.projectKey", "motunikomi_homepage"
    property "sonar.organization", "krtnstk"
    property "sonar.host.url", "https://sonarcloud.io"
    property "sonar.login", "670f14f90e985928335e693fbbf61df5e9b2ada7"
  }
}


/*
jacoco {
    toolVersion = "0.8.5"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}
test.dependsOn jacocoTestReport
*/